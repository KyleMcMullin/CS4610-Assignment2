// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String   @unique
  passwordHash String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  reptiles    Reptile[]
  schedules   Schedule[]
  sessions    Session[]
}

model Reptile {
  id               Int              @id @default(autoincrement())
  userId           Int
  user             User             @relation(fields: [userId], references: [id])
  species          String
  name             String
  sex              String
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  feedings         Feeding[]
  husbandryRecords HusbandryRecord[]
  schedules        Schedule[]
}

model Feeding {
  id         Int      @id @default(autoincrement())
  reptileId  Int
  reptile    Reptile  @relation(fields: [reptileId], references: [id], onDelete: Cascade)
  foodItem   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model HusbandryRecord {
  id         Int      @id @default(autoincrement())
  reptileId  Int
  reptile    Reptile  @relation(fields: [reptileId], references: [id], onDelete: Cascade)
  length     Float
  weight     Float
  temperature Float
  humidity   Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Schedule {
  id           Int      @id @default(autoincrement())
  reptileId    Int
  reptile      Reptile  @relation(fields: [reptileId], references: [id], onDelete: Cascade)
  userId       Int
  user         User     @relation(fields: [userId], references: [id])
  type         String
  description  String
  monday       Boolean
  tuesday      Boolean
  wednesday    Boolean
  thursday     Boolean
  friday       Boolean
  saturday     Boolean
  sunday       Boolean
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Session {
  id            Int     @id @default(autoincrement())
  token         String
  user          User    @relation(fields: [userId], references: [id])
  userId        Int
}

